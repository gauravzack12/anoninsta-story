{"ast":null,"code":"import React from 'react';\nconst matchName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst iconDefaults = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\n\nfunction fullIcon(data) {\n  return { ...iconDefaults,\n    ...data\n  };\n}\n\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n\n    provider = colonSeparated.shift().slice(1);\n  }\n\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIcon(result, allowSimpleName) ? null : result;\n  }\n\n  return null;\n};\n\nconst validateIcon = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n\n  return !!((icon.provider === \"\" || icon.provider.match(matchName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchName)) && icon.name.match(matchName));\n};\n\nfunction mergeIconData(icon, alias) {\n  const result = { ...icon\n  };\n\n  for (const key in iconDefaults) {\n    const prop = key;\n\n    if (alias[prop] !== void 0) {\n      const value = alias[prop];\n\n      if (result[prop] === void 0) {\n        result[prop] = value;\n        continue;\n      }\n\n      switch (prop) {\n        case \"rotate\":\n          result[prop] = (result[prop] + value) % 4;\n          break;\n\n        case \"hFlip\":\n        case \"vFlip\":\n          result[prop] = value !== result[prop];\n          break;\n\n        default:\n          result[prop] = value;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction getIconData$1(data, name, full = false) {\n  function getIcon(name2, iteration) {\n    if (data.icons[name2] !== void 0) {\n      return Object.assign({}, data.icons[name2]);\n    }\n\n    if (iteration > 5) {\n      return null;\n    }\n\n    const aliases = data.aliases;\n\n    if (aliases && aliases[name2] !== void 0) {\n      const item = aliases[name2];\n      const result2 = getIcon(item.parent, iteration + 1);\n\n      if (result2) {\n        return mergeIconData(result2, item);\n      }\n\n      return result2;\n    }\n\n    const chars = data.chars;\n\n    if (!iteration && chars && chars[name2] !== void 0) {\n      return getIcon(chars[name2], iteration + 1);\n    }\n\n    return null;\n  }\n\n  const result = getIcon(name, 0);\n\n  if (result) {\n    for (const key in iconDefaults) {\n      if (result[key] === void 0 && data[key] !== void 0) {\n        result[key] = data[key];\n      }\n    }\n  }\n\n  return result && full ? fullIcon(result) : result;\n}\n\nfunction isVariation(item) {\n  for (const key in iconDefaults) {\n    if (item[key] !== void 0) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction parseIconSet(data, callback, options) {\n  options = options || {};\n  const names = [];\n\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach(name => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n\n  const icons = data.icons;\n  Object.keys(icons).forEach(name => {\n    const iconData = getIconData$1(data, name, true);\n\n    if (iconData) {\n      callback(name, iconData);\n      names.push(name);\n    }\n  });\n  const parseAliases = options.aliases || \"all\";\n\n  if (parseAliases !== \"none\" && typeof data.aliases === \"object\") {\n    const aliases = data.aliases;\n    Object.keys(aliases).forEach(name => {\n      if (parseAliases === \"variations\" && isVariation(aliases[name])) {\n        return;\n      }\n\n      const iconData = getIconData$1(data, name, true);\n\n      if (iconData) {\n        callback(name, iconData);\n        names.push(name);\n      }\n    });\n  }\n\n  return names;\n}\n\nconst optionalProperties = {\n  provider: \"string\",\n  aliases: \"object\",\n  not_found: \"object\"\n};\n\nfor (const prop in iconDefaults) {\n  optionalProperties[prop] = typeof iconDefaults[prop];\n}\n\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n\n  const data = obj;\n\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n\n  for (const prop in optionalProperties) {\n    if (obj[prop] !== void 0 && typeof obj[prop] !== optionalProperties[prop]) {\n      return null;\n    }\n  }\n\n  const icons = data.icons;\n\n  for (const name in icons) {\n    const icon = icons[name];\n\n    if (!name.match(matchName) || typeof icon.body !== \"string\") {\n      return null;\n    }\n\n    for (const prop in iconDefaults) {\n      if (icon[prop] !== void 0 && typeof icon[prop] !== typeof iconDefaults[prop]) {\n        return null;\n      }\n    }\n  }\n\n  const aliases = data.aliases;\n\n  if (aliases) {\n    for (const name in aliases) {\n      const icon = aliases[name];\n      const parent = icon.parent;\n\n      if (!name.match(matchName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent]) {\n        return null;\n      }\n\n      for (const prop in iconDefaults) {\n        if (icon[prop] !== void 0 && typeof icon[prop] !== typeof iconDefaults[prop]) {\n          return null;\n        }\n      }\n    }\n  }\n\n  return data;\n}\n\nconst storageVersion = 1;\nlet storage$1 = /* @__PURE__ */Object.create(null);\n\ntry {\n  const w = window || self;\n\n  if (w && w._iconifyStorage.version === storageVersion) {\n    storage$1 = w._iconifyStorage.storage;\n  }\n} catch (err) {}\n\nfunction shareStorage() {\n  try {\n    const w = window || self;\n\n    if (w && !w._iconifyStorage) {\n      w._iconifyStorage = {\n        version: storageVersion,\n        storage: storage$1\n      };\n    }\n  } catch (err) {}\n}\n\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */Object.create(null),\n    missing: /* @__PURE__ */Object.create(null)\n  };\n}\n\nfunction getStorage(provider, prefix) {\n  if (storage$1[provider] === void 0) {\n    storage$1[provider] = /* @__PURE__ */Object.create(null);\n  }\n\n  const providerStorage = storage$1[provider];\n\n  if (providerStorage[prefix] === void 0) {\n    providerStorage[prefix] = newStorage(provider, prefix);\n  }\n\n  return providerStorage[prefix];\n}\n\nfunction addIconSet(storage2, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n\n  const t = Date.now();\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage2.icons[name] = icon;\n    } else {\n      storage2.missing[name] = t;\n    }\n  });\n}\n\nfunction addIconToStorage(storage2, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage2.icons[name] = Object.freeze(fullIcon(icon));\n      return true;\n    }\n  } catch (err) {}\n\n  return false;\n}\n\nfunction getIconFromStorage(storage2, name) {\n  const value = storage2.icons[name];\n  return value === void 0 ? null : value;\n}\n\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  let providers;\n\n  if (typeof provider === \"string\") {\n    providers = [provider];\n  } else {\n    providers = Object.keys(storage$1);\n  }\n\n  providers.forEach(provider2 => {\n    let prefixes;\n\n    if (typeof provider2 === \"string\" && typeof prefix === \"string\") {\n      prefixes = [prefix];\n    } else {\n      prefixes = storage$1[provider2] === void 0 ? [] : Object.keys(storage$1[provider2]);\n    }\n\n    prefixes.forEach(prefix2 => {\n      const storage2 = getStorage(provider2, prefix2);\n      const icons = Object.keys(storage2.icons).map(name => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name);\n      allIcons = allIcons.concat(icons);\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\n\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n\n  return simpleNames;\n}\n\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  return icon ? getIconFromStorage(getStorage(icon.provider, icon.prefix), icon.name) : null;\n}\n\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n\n  if (!icon) {\n    return false;\n  }\n\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\n\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n\n  if (typeof provider !== \"string\") {\n    provider = typeof data.provider === \"string\" ? data.provider : \"\";\n  }\n\n  if (simpleNames && provider === \"\" && (typeof data.prefix !== \"string\" || data.prefix === \"\")) {\n    let added = false;\n\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n\n    return added;\n  }\n\n  if (typeof data.prefix !== \"string\" || !validateIcon({\n    provider,\n    prefix: data.prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n\n  const storage = getStorage(provider, data.prefix);\n  return !!addIconSet(storage, data);\n}\n\nfunction iconExists(name) {\n  return getIconData(name) !== null;\n}\n\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? { ...result\n  } : null;\n}\n\nconst defaults = Object.freeze({\n  inline: false,\n  width: null,\n  height: null,\n  hAlign: \"center\",\n  vAlign: \"middle\",\n  slice: false,\n  hFlip: false,\n  vFlip: false,\n  rotate: 0\n});\n\nfunction mergeCustomisations(defaults2, item) {\n  const result = {};\n\n  for (const key in defaults2) {\n    const attr = key;\n    result[attr] = defaults2[attr];\n\n    if (item[attr] === void 0) {\n      continue;\n    }\n\n    const value = item[attr];\n\n    switch (attr) {\n      case \"inline\":\n      case \"slice\":\n        if (typeof value === \"boolean\") {\n          result[attr] = value;\n        }\n\n        break;\n\n      case \"hFlip\":\n      case \"vFlip\":\n        if (value === true) {\n          result[attr] = !result[attr];\n        }\n\n        break;\n\n      case \"hAlign\":\n      case \"vAlign\":\n        if (typeof value === \"string\" && value !== \"\") {\n          result[attr] = value;\n        }\n\n        break;\n\n      case \"width\":\n      case \"height\":\n        if (typeof value === \"string\" && value !== \"\" || typeof value === \"number\" && value || value === null) {\n          result[attr] = value;\n        }\n\n        break;\n\n      case \"rotate\":\n        if (typeof value === \"number\") {\n          result[attr] += value;\n        }\n\n        break;\n    }\n  }\n\n  return result;\n}\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\n\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n\n  precision = precision === void 0 ? 100 : precision;\n\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n\n  if (typeof size !== \"string\") {\n    return size;\n  }\n\n  const oldParts = size.split(unitsSplit);\n\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n\n    code = oldParts.shift();\n\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n\n    isNumber = !isNumber;\n  }\n}\n\nfunction preserveAspectRatio(props) {\n  let result = \"\";\n\n  switch (props.hAlign) {\n    case \"left\":\n      result += \"xMin\";\n      break;\n\n    case \"right\":\n      result += \"xMax\";\n      break;\n\n    default:\n      result += \"xMid\";\n  }\n\n  switch (props.vAlign) {\n    case \"top\":\n      result += \"YMin\";\n      break;\n\n    case \"bottom\":\n      result += \"YMax\";\n      break;\n\n    default:\n      result += \"YMid\";\n  }\n\n  result += props.slice ? \" slice\" : \" meet\";\n  return result;\n}\n\nfunction iconToSVG(icon, customisations) {\n  const box = {\n    left: icon.left,\n    top: icon.top,\n    width: icon.width,\n    height: icon.height\n  };\n  let body = icon.body;\n  [icon, customisations].forEach(props => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n\n    let tempValue;\n\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n\n    rotation = rotation % 4;\n\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\");\n        break;\n\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n    }\n\n    if (rotation % 2 === 1) {\n      if (box.left !== 0 || box.top !== 0) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  let width, height;\n\n  if (customisations.width === null && customisations.height === null) {\n    height = \"1em\";\n    width = calculateSize(height, box.width / box.height);\n  } else if (customisations.width !== null && customisations.height !== null) {\n    width = customisations.width;\n    height = customisations.height;\n  } else if (customisations.height !== null) {\n    height = customisations.height;\n    width = calculateSize(height, box.width / box.height);\n  } else {\n    width = customisations.width;\n    height = calculateSize(width, box.height / box.width);\n  }\n\n  if (width === \"auto\") {\n    width = box.width;\n  }\n\n  if (height === \"auto\") {\n    height = box.height;\n  }\n\n  width = typeof width === \"string\" ? width : width.toString() + \"\";\n  height = typeof height === \"string\" ? height : height.toString() + \"\";\n  const result = {\n    attributes: {\n      width,\n      height,\n      preserveAspectRatio: preserveAspectRatio(customisations),\n      viewBox: box.left.toString() + \" \" + box.top.toString() + \" \" + box.width.toString() + \" \" + box.height.toString()\n    },\n    body\n  };\n\n  if (customisations.inline) {\n    result.inline = true;\n  }\n\n  return result;\n}\n\nfunction buildIcon(icon, customisations) {\n  return iconToSVG(fullIcon(icon), customisations ? mergeCustomisations(defaults, customisations) : defaults);\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\n\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n\n  if (!ids.length) {\n    return body;\n  }\n\n  ids.forEach(id => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"), \"$1\" + newID + \"$3\");\n  });\n  return body;\n}\n\nconst storage = /* @__PURE__ */Object.create(null);\n\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\n\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n\n  const result = {\n    resources,\n    path: source.path === void 0 ? \"/\" : source.path,\n    maxURL: source.maxURL ? source.maxURL : 500,\n    rotate: source.rotate ? source.rotate : 750,\n    timeout: source.timeout ? source.timeout : 5e3,\n    random: source.random === true,\n    index: source.index ? source.index : 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\n\nconst configStorage = /* @__PURE__ */Object.create(null);\nconst fallBackAPISources = [\"https://api.simplesvg.com\", \"https://api.unisvg.com\"];\nconst fallBackAPI = [];\n\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\n\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\n\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n\n  if (config === null) {\n    return false;\n  }\n\n  configStorage[provider] = config;\n  return true;\n}\n\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\n\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst mergeParams = (base, params) => {\n  let result = base,\n      hasParams = result.indexOf(\"?\") !== -1;\n\n  function paramToString(value) {\n    switch (typeof value) {\n      case \"boolean\":\n        return value ? \"true\" : \"false\";\n\n      case \"number\":\n        return encodeURIComponent(value);\n\n      case \"string\":\n        return encodeURIComponent(value);\n\n      default:\n        throw new Error(\"Invalid parameter\");\n    }\n  }\n\n  Object.keys(params).forEach(key => {\n    let value;\n\n    try {\n      value = paramToString(params[key]);\n    } catch (err) {\n      return;\n    }\n\n    result += (hasParams ? \"&\" : \"?\") + encodeURIComponent(key) + \"=\" + value;\n    hasParams = true;\n  });\n  return result;\n};\n\nconst maxLengthCache = {};\nconst pathCache = {};\n\nconst detectFetch = () => {\n  let callback;\n\n  try {\n    callback = fetch;\n\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {}\n\n  return null;\n};\n\nlet fetchModule = detectFetch();\n\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\n\nfunction getFetch() {\n  return fetchModule;\n}\n\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n\n  if (!config) {\n    return 0;\n  }\n\n  let result;\n\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach(item => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = mergeParams(prefix + \".json\", {\n      icons: \"\"\n    });\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n\n  const cacheKey = provider + \":\" + prefix;\n  pathCache[provider] = config.path;\n  maxLengthCache[cacheKey] = result;\n  return result;\n}\n\nfunction shouldAbort(status) {\n  return status === 404;\n}\n\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  let maxLength = maxLengthCache[prefix];\n\n  if (maxLength === void 0) {\n    maxLength = calculateMaxLength(provider, prefix);\n  }\n\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\n\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    if (pathCache[provider] === void 0) {\n      const config = getAPIConfig(provider);\n\n      if (!config) {\n        return \"/\";\n      }\n\n      pathCache[provider] = config.path;\n    }\n\n    return pathCache[provider];\n  }\n\n  return \"/\";\n}\n\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n\n  let path = getPath(params.provider);\n\n  switch (params.type) {\n    case \"icons\":\n      {\n        const prefix = params.prefix;\n        const icons = params.icons;\n        const iconsList = icons.join(\",\");\n        path += mergeParams(prefix + \".json\", {\n          icons: iconsList\n        });\n        break;\n      }\n\n    case \"custom\":\n      {\n        const uri = params.uri;\n        path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n        break;\n      }\n\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n\n  let defaultError = 503;\n  fetchModule(host + path).then(response => {\n    const status = response.status;\n\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n\n    defaultError = 501;\n    return response.json();\n  }).then(data => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        callback(\"next\", defaultError);\n      });\n      return;\n    }\n\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\n\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach(icon => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n\n    if (storage[provider] === void 0) {\n      storage[provider] = /* @__PURE__ */Object.create(null);\n    }\n\n    const providerStorage = storage[provider];\n\n    if (providerStorage[prefix] === void 0) {\n      providerStorage[prefix] = getStorage(provider, prefix);\n    }\n\n    const localStorage = providerStorage[prefix];\n    let list;\n\n    if (localStorage.icons[name] !== void 0) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing[name] !== void 0) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nconst callbacks = /* @__PURE__ */Object.create(null);\nconst pendingUpdates = /* @__PURE__ */Object.create(null);\n\nfunction removeCallback(sources, id) {\n  sources.forEach(source => {\n    const provider = source.provider;\n\n    if (callbacks[provider] === void 0) {\n      return;\n    }\n\n    const providerCallbacks = callbacks[provider];\n    const prefix = source.prefix;\n    const items = providerCallbacks[prefix];\n\n    if (items) {\n      providerCallbacks[prefix] = items.filter(row => row.id !== id);\n    }\n  });\n}\n\nfunction updateCallbacks(provider, prefix) {\n  if (pendingUpdates[provider] === void 0) {\n    pendingUpdates[provider] = /* @__PURE__ */Object.create(null);\n  }\n\n  const providerPendingUpdates = pendingUpdates[provider];\n\n  if (!providerPendingUpdates[prefix]) {\n    providerPendingUpdates[prefix] = true;\n    setTimeout(() => {\n      providerPendingUpdates[prefix] = false;\n\n      if (callbacks[provider] === void 0 || callbacks[provider][prefix] === void 0) {\n        return;\n      }\n\n      const items = callbacks[provider][prefix].slice(0);\n\n      if (!items.length) {\n        return;\n      }\n\n      const storage = getStorage(provider, prefix);\n      let hasPending = false;\n      items.forEach(item => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter(icon => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n\n          const name = icon.name;\n\n          if (storage.icons[name] !== void 0) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing[name] !== void 0) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n\n          return false;\n        });\n\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([{\n              provider,\n              prefix\n            }], item.id);\n          }\n\n          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n        }\n      });\n    });\n  }\n}\n\nlet idCounter = 0;\n\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n\n  if (!icons.pending.length) {\n    return abort;\n  }\n\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach(source => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n\n    if (callbacks[provider] === void 0) {\n      callbacks[provider] = /* @__PURE__ */Object.create(null);\n    }\n\n    const providerCallbacks = callbacks[provider];\n\n    if (providerCallbacks[prefix] === void 0) {\n      providerCallbacks[prefix] = [];\n    }\n\n    providerCallbacks[prefix].push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach(item => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, false, simpleNames) : item;\n\n    if (!validate || validateIcon(icon, simpleNames)) {\n      result.push({\n        provider: icon.provider,\n        prefix: icon.prefix,\n        name: icon.name\n      });\n    }\n  });\n  return result;\n} // src/config.ts\n\n\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n}; // src/query.ts\n\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n\n    resetTimer();\n    queue.forEach(item => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach(callback => {\n      callback(void 0, lastError);\n    });\n  }\n\n  function clearQueue() {\n    queue.forEach(item => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter(queued => queued !== item);\n\n    switch (status) {\n      case \"pending\":\n        break;\n\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n\n        break;\n\n      default:\n        return;\n    }\n\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n\n    if (isError) {\n      lastError = data;\n\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n\n      return;\n    }\n\n    resetTimer();\n    clearQueue();\n\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n\n    status = \"completed\";\n    doneCallbacks.forEach(callback => {\n      callback(data);\n    });\n  }\n\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n\n    resetTimer();\n    const resource = resources.shift();\n\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n\n      failQuery();\n      return;\n    }\n\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n\n  setTimeout(execNext);\n  return getQueryStatus;\n} // src/index.ts\n\n\nfunction setConfig(config) {\n  if (typeof config !== \"object\" || typeof config.resources !== \"object\" || !(config.resources instanceof Array) || !config.resources.length) {\n    throw new Error(\"Invalid Reduncancy configuration\");\n  }\n\n  const newConfig = /* @__PURE__ */Object.create(null);\n  let key;\n\n  for (key in defaultConfig) {\n    if (config[key] !== void 0) {\n      newConfig[key] = config[key];\n    } else {\n      newConfig[key] = defaultConfig[key];\n    }\n  }\n\n  return newConfig;\n}\n\nfunction initRedundancy(cfg) {\n  const config = setConfig(cfg);\n  let queries = [];\n\n  function cleanup() {\n    queries = queries.filter(item => item().status === \"pending\");\n  }\n\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(config, payload, queryCallback, (data, error) => {\n      cleanup();\n\n      if (doneCallback) {\n        doneCallback(data, error);\n      }\n    });\n    queries.push(query2);\n    return query2;\n  }\n\n  function find(callback) {\n    const result = queries.find(value => {\n      return callback(value);\n    });\n    return result !== void 0 ? result : null;\n  }\n\n  const instance = {\n    query,\n    find,\n    setIndex: index => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {}\n\nconst redundancyCache = /* @__PURE__ */Object.create(null);\n\nfunction getRedundancyCache(provider) {\n  if (redundancyCache[provider] === void 0) {\n    const config = getAPIConfig(provider);\n\n    if (!config) {\n      return;\n    }\n\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n\n  return redundancyCache[provider];\n}\n\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n\n    send = api.send;\n    const cached = getRedundancyCache(target);\n\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst cache = {};\n\nfunction emptyCallback() {}\n\nconst pendingIcons = /* @__PURE__ */Object.create(null);\nconst iconsToLoad = /* @__PURE__ */Object.create(null);\nconst loaderFlags = /* @__PURE__ */Object.create(null);\nconst queueFlags = /* @__PURE__ */Object.create(null);\n\nfunction loadedNewIcons(provider, prefix) {\n  if (loaderFlags[provider] === void 0) {\n    loaderFlags[provider] = /* @__PURE__ */Object.create(null);\n  }\n\n  const providerLoaderFlags = loaderFlags[provider];\n\n  if (!providerLoaderFlags[prefix]) {\n    providerLoaderFlags[prefix] = true;\n    setTimeout(() => {\n      providerLoaderFlags[prefix] = false;\n      updateCallbacks(provider, prefix);\n    });\n  }\n}\n\nconst errorsCache = /* @__PURE__ */Object.create(null);\n\nfunction loadNewIcons(provider, prefix, icons) {\n  function err() {\n    const key = (provider === \"\" ? \"\" : \"@\" + provider + \":\") + prefix;\n    const time = Math.floor(Date.now() / 6e4);\n\n    if (errorsCache[key] < time) {\n      errorsCache[key] = time;\n      console.error('Unable to retrieve icons for \"' + key + '\" because API is not configured properly.');\n    }\n  }\n\n  if (iconsToLoad[provider] === void 0) {\n    iconsToLoad[provider] = /* @__PURE__ */Object.create(null);\n  }\n\n  const providerIconsToLoad = iconsToLoad[provider];\n\n  if (queueFlags[provider] === void 0) {\n    queueFlags[provider] = /* @__PURE__ */Object.create(null);\n  }\n\n  const providerQueueFlags = queueFlags[provider];\n\n  if (pendingIcons[provider] === void 0) {\n    pendingIcons[provider] = /* @__PURE__ */Object.create(null);\n  }\n\n  const providerPendingIcons = pendingIcons[provider];\n\n  if (providerIconsToLoad[prefix] === void 0) {\n    providerIconsToLoad[prefix] = icons;\n  } else {\n    providerIconsToLoad[prefix] = providerIconsToLoad[prefix].concat(icons).sort();\n  }\n\n  if (!providerQueueFlags[prefix]) {\n    providerQueueFlags[prefix] = true;\n    setTimeout(() => {\n      providerQueueFlags[prefix] = false;\n      const icons2 = providerIconsToLoad[prefix];\n      delete providerIconsToLoad[prefix];\n      const api = getAPIModule(provider);\n\n      if (!api) {\n        err();\n        return;\n      }\n\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach(item => {\n        sendAPIQuery(provider, item, (data, error) => {\n          const storage = getStorage(provider, prefix);\n\n          if (typeof data !== \"object\") {\n            if (error !== 404) {\n              return;\n            }\n\n            const t = Date.now();\n            item.icons.forEach(name => {\n              storage.missing[name] = t;\n            });\n          } else {\n            try {\n              const parsed = addIconSet(storage, data);\n\n              if (!parsed.length) {\n                return;\n              }\n\n              const pending = providerPendingIcons[prefix];\n              parsed.forEach(name => {\n                delete pending[name];\n              });\n\n              if (cache.store) {\n                cache.store(provider, data);\n              }\n            } catch (err2) {\n              console.error(err2);\n            }\n          }\n\n          loadedNewIcons(provider, prefix);\n        });\n      });\n    });\n  }\n}\n\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n        }\n      });\n    }\n\n    return () => {\n      callCallback = false;\n    };\n  }\n\n  const newIcons = /* @__PURE__ */Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach(icon => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push({\n      provider,\n      prefix\n    });\n\n    if (pendingIcons[provider] === void 0) {\n      pendingIcons[provider] = /* @__PURE__ */Object.create(null);\n    }\n\n    const providerPendingIcons = pendingIcons[provider];\n\n    if (providerPendingIcons[prefix] === void 0) {\n      providerPendingIcons[prefix] = /* @__PURE__ */Object.create(null);\n    }\n\n    if (newIcons[provider] === void 0) {\n      newIcons[provider] = /* @__PURE__ */Object.create(null);\n    }\n\n    const providerNewIcons = newIcons[provider];\n\n    if (providerNewIcons[prefix] === void 0) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  const time = Date.now();\n  sortedIcons.pending.forEach(icon => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const pendingQueue = pendingIcons[provider][prefix];\n\n    if (pendingQueue[name] === void 0) {\n      pendingQueue[name] = time;\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach(source => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(provider, prefix, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\n\nconst loadIcon = icon => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon) : icon;\n    loadIcons([iconObj || icon], loaded => {\n      if (loaded.length && iconObj) {\n        const storage = getStorage(iconObj.provider, iconObj.prefix);\n        const data = getIconFromStorage(storage, iconObj.name);\n\n        if (data) {\n          fulfill(data);\n          return;\n        }\n      }\n\n      reject(icon);\n    });\n  });\n};\n\nconst cacheVersion = \"iconify2\";\nconst cachePrefix = \"iconify\";\nconst countKey = cachePrefix + \"-count\";\nconst versionKey = cachePrefix + \"-version\";\nconst hour = 36e5;\nconst cacheExpiration = 168;\nconst config = {\n  local: true,\n  session: true\n};\nlet loaded = false;\nconst count = {\n  local: 0,\n  session: 0\n};\nconst emptyList = {\n  local: [],\n  session: []\n};\n\nlet _window = typeof window === \"undefined\" ? {} : window;\n\nfunction getGlobal(key) {\n  const attr = key + \"Storage\";\n\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {}\n\n  config[key] = false;\n  return null;\n}\n\nfunction setCount(storage, key, value) {\n  try {\n    storage.setItem(countKey, value.toString());\n    count[key] = value;\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction getCount(storage) {\n  const count2 = storage.getItem(countKey);\n\n  if (count2) {\n    const total = parseInt(count2);\n    return total ? total : 0;\n  }\n\n  return 0;\n}\n\nfunction initCache(storage, key) {\n  try {\n    storage.setItem(versionKey, cacheVersion);\n  } catch (err) {}\n\n  setCount(storage, key, 0);\n}\n\nfunction destroyCache(storage) {\n  try {\n    const total = getCount(storage);\n\n    for (let i = 0; i < total; i++) {\n      storage.removeItem(cachePrefix + i.toString());\n    }\n  } catch (err) {}\n}\n\nconst loadCache = () => {\n  if (loaded) {\n    return;\n  }\n\n  loaded = true;\n  const minTime = Math.floor(Date.now() / hour) - cacheExpiration;\n\n  function load(key) {\n    const func = getGlobal(key);\n\n    if (!func) {\n      return;\n    }\n\n    const getItem = index => {\n      const name = cachePrefix + index.toString();\n      const item = func.getItem(name);\n\n      if (typeof item !== \"string\") {\n        return false;\n      }\n\n      let valid = true;\n\n      try {\n        const data = JSON.parse(item);\n\n        if (typeof data !== \"object\" || typeof data.cached !== \"number\" || data.cached < minTime || typeof data.provider !== \"string\" || typeof data.data !== \"object\" || typeof data.data.prefix !== \"string\") {\n          valid = false;\n        } else {\n          const provider = data.provider;\n          const prefix = data.data.prefix;\n          const storage = getStorage(provider, prefix);\n          valid = addIconSet(storage, data.data).length > 0;\n        }\n      } catch (err) {\n        valid = false;\n      }\n\n      if (!valid) {\n        func.removeItem(name);\n      }\n\n      return valid;\n    };\n\n    try {\n      const version = func.getItem(versionKey);\n\n      if (version !== cacheVersion) {\n        if (version) {\n          destroyCache(func);\n        }\n\n        initCache(func, key);\n        return;\n      }\n\n      let total = getCount(func);\n\n      for (let i = total - 1; i >= 0; i--) {\n        if (!getItem(i)) {\n          if (i === total - 1) {\n            total--;\n          } else {\n            emptyList[key].push(i);\n          }\n        }\n      }\n\n      setCount(func, key, total);\n    } catch (err) {}\n  }\n\n  for (const key in config) {\n    load(key);\n  }\n};\n\nconst storeCache = (provider, data) => {\n  if (!loaded) {\n    loadCache();\n  }\n\n  function store(key) {\n    if (!config[key]) {\n      return false;\n    }\n\n    const func = getGlobal(key);\n\n    if (!func) {\n      return false;\n    }\n\n    let index = emptyList[key].shift();\n\n    if (index === void 0) {\n      index = count[key];\n\n      if (!setCount(func, key, index + 1)) {\n        return false;\n      }\n    }\n\n    try {\n      const item = {\n        cached: Math.floor(Date.now() / hour),\n        provider,\n        data\n      };\n      func.setItem(cachePrefix + index.toString(), JSON.stringify(item));\n    } catch (err) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      config[storage] = value;\n      break;\n\n    case \"all\":\n      for (const key in config) {\n        config[key] = value;\n      }\n\n      break;\n  }\n}\n\nconst separator = /[\\s,]+/;\n\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach(str => {\n    const value = str.trim();\n\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nfunction alignmentFromString(custom, align) {\n  align.split(separator).forEach(str => {\n    const value = str.trim();\n\n    switch (value) {\n      case \"left\":\n      case \"center\":\n      case \"right\":\n        custom.hAlign = value;\n        break;\n\n      case \"top\":\n      case \"middle\":\n      case \"bottom\":\n        custom.vAlign = value;\n        break;\n\n      case \"slice\":\n      case \"crop\":\n        custom.slice = true;\n        break;\n\n      case \"meet\":\n        custom.slice = false;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n\n    return value2 % 4;\n  }\n\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n\n      case \"deg\":\n        split = 90;\n    }\n\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n\n      if (isNaN(num)) {\n        return 0;\n      }\n\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n\n  return defaultValue;\n}\n/**\n * Default SVG attributes\n */\n\n\nconst svgDefaults = {\n  'xmlns': 'http://www.w3.org/2000/svg',\n  'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n  'aria-hidden': true,\n  'role': 'img',\n  'style': {} // Include style if it isn't set to add verticalAlign later\n\n};\n/**\n * Default values for customisations for inline icon\n */\n\nconst inlineDefaults = { ...defaults,\n  inline: true\n};\n/**\n * Render icon\n */\n\nconst render = ( // Icon must be validated before calling this function\nicon, // Partial properties\nprops, // True if icon should have vertical-align added\ninline, // Optional reference for SVG, extracted by React.forwardRef()\nref) => {\n  // Get default properties\n  const defaultProps = inline ? inlineDefaults : defaults; // Get all customisations\n\n  const customisations = mergeCustomisations(defaultProps, props); // Create style\n\n  const style = typeof props.style === 'object' && props.style !== null ? props.style : {}; // Create SVG component properties\n\n  const componentProps = { ...svgDefaults,\n    ref,\n    style\n  }; // Get element properties\n\n  for (let key in props) {\n    const value = props[key];\n\n    if (value === void 0) {\n      continue;\n    }\n\n    switch (key) {\n      // Properties to ignore\n      case 'icon':\n      case 'style':\n      case 'children':\n      case 'onLoad':\n      case '_ref':\n      case '_inline':\n        break;\n      // Boolean attributes\n\n      case 'inline':\n      case 'hFlip':\n      case 'vFlip':\n        customisations[key] = value === true || value === 'true' || value === 1;\n        break;\n      // Flip as string: 'horizontal,vertical'\n\n      case 'flip':\n        if (typeof value === 'string') {\n          flipFromString(customisations, value);\n        }\n\n        break;\n      // Alignment as string\n\n      case 'align':\n        if (typeof value === 'string') {\n          alignmentFromString(customisations, value);\n        }\n\n        break;\n      // Color: copy to style\n\n      case 'color':\n        style.color = value;\n        break;\n      // Rotation as string\n\n      case 'rotate':\n        if (typeof value === 'string') {\n          customisations[key] = rotateFromString(value);\n        } else if (typeof value === 'number') {\n          customisations[key] = value;\n        }\n\n        break;\n      // Remove aria-hidden\n\n      case 'ariaHidden':\n      case 'aria-hidden':\n        if (value !== true && value !== 'true') {\n          delete componentProps['aria-hidden'];\n        }\n\n        break;\n      // Copy missing property if it does not exist in customisations\n\n      default:\n        if (defaultProps[key] === void 0) {\n          componentProps[key] = value;\n        }\n\n    }\n  } // Generate icon\n\n\n  const item = iconToSVG(icon, customisations); // Counter for ids based on \"id\" property to render icons consistently on server and client\n\n  let localCounter = 0;\n  let id = props.id;\n\n  if (typeof id === 'string') {\n    // Convert '-' to '_' to avoid errors in animations\n    id = id.replace(/-/g, '_');\n  } // Add icon stuff\n\n\n  componentProps.dangerouslySetInnerHTML = {\n    __html: replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyReact')\n  };\n\n  for (let key in item.attributes) {\n    componentProps[key] = item.attributes[key];\n  }\n\n  if (item.inline && style.verticalAlign === void 0) {\n    style.verticalAlign = '-0.125em';\n  }\n\n  return React.createElement('svg', componentProps);\n};\n/**\n * Enable cache\n */\n\n\nfunction enableCache(storage) {\n  toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\n\n\nfunction disableCache(storage) {\n  toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\n\n\nallowSimpleNames(true); // Set API module\n\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // Set cache and load existing cache\n  cache.store = storeCache;\n  loadCache();\n  const _window = window; // Load icons from global \"IconifyPreload\"\n\n  if (_window.IconifyPreload !== void 0) {\n    const preload = _window.IconifyPreload;\n    const err = 'Invalid IconifyPreload syntax.';\n\n    if (typeof preload === 'object' && preload !== null) {\n      (preload instanceof Array ? preload : [preload]).forEach(item => {\n        try {\n          if ( // Check if item is an object and not null/array\n          typeof item !== 'object' || item === null || item instanceof Array || // Check for 'icons' and 'prefix'\n          typeof item.icons !== 'object' || typeof item.prefix !== 'string' || // Add icon set\n          !addCollection(item)) {\n            console.error(err);\n          }\n        } catch (e) {\n          console.error(err);\n        }\n      });\n    }\n  } // Set API from global \"IconifyProviders\"\n\n\n  if (_window.IconifyProviders !== void 0) {\n    const providers = _window.IconifyProviders;\n\n    if (typeof providers === 'object' && providers !== null) {\n      for (let key in providers) {\n        const err = 'IconifyProviders[' + key + '] is invalid.';\n\n        try {\n          const value = providers[key];\n\n          if (typeof value !== 'object' || !value || value.resources === void 0) {\n            continue;\n          }\n\n          if (!addAPIProvider(key, value)) {\n            console.error(err);\n          }\n        } catch (e) {\n          console.error(err);\n        }\n      }\n    }\n  }\n}\n\nclass IconComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Render placeholder before component is mounted\n      icon: null\n    };\n  }\n  /**\n   * Abort loading icon\n   */\n\n\n  _abortLoading() {\n    if (this._loading) {\n      this._loading.abort();\n\n      this._loading = null;\n    }\n  }\n  /**\n   * Update state\n   */\n\n\n  _setData(icon) {\n    if (this.state.icon !== icon) {\n      this.setState({\n        icon\n      });\n    }\n  }\n  /**\n   * Check if icon should be loaded\n   */\n\n\n  _checkIcon(changed) {\n    const state = this.state;\n    const icon = this.props.icon; // Icon is an object\n\n    if (typeof icon === 'object' && icon !== null && typeof icon.body === 'string') {\n      // Stop loading\n      this._icon = '';\n\n      this._abortLoading();\n\n      if (changed || state.icon === null) {\n        // Set data if it was changed\n        this._setData({\n          data: fullIcon(icon)\n        });\n      }\n\n      return;\n    } // Invalid icon?\n\n\n    let iconName;\n\n    if (typeof icon !== 'string' || (iconName = stringToIcon(icon, false, true)) === null) {\n      this._abortLoading();\n\n      this._setData(null);\n\n      return;\n    } // Load icon\n\n\n    const data = getIconData(iconName);\n\n    if (data === null) {\n      // Icon needs to be loaded\n      if (!this._loading || this._loading.name !== icon) {\n        // New icon to load\n        this._abortLoading();\n\n        this._icon = '';\n\n        this._setData(null);\n\n        this._loading = {\n          name: icon,\n          abort: loadIcons([iconName], this._checkIcon.bind(this, false))\n        };\n      }\n\n      return;\n    } // Icon data is available\n\n\n    if (this._icon !== icon || state.icon === null) {\n      // New icon or icon has been loaded\n      this._abortLoading();\n\n      this._icon = icon; // Add classes\n\n      const classes = ['iconify'];\n\n      if (iconName.prefix !== '') {\n        classes.push('iconify--' + iconName.prefix);\n      }\n\n      if (iconName.provider !== '') {\n        classes.push('iconify--' + iconName.provider);\n      } // Set data\n\n\n      this._setData({\n        data,\n        classes\n      });\n\n      if (this.props.onLoad) {\n        this.props.onLoad(icon);\n      }\n    }\n  }\n  /**\n   * Component mounted\n   */\n\n\n  componentDidMount() {\n    this._checkIcon(false);\n  }\n  /**\n   * Component updated\n   */\n\n\n  componentDidUpdate(oldProps) {\n    if (oldProps.icon !== this.props.icon) {\n      this._checkIcon(true);\n    }\n  }\n  /**\n   * Abort loading\n   */\n\n\n  componentWillUnmount() {\n    this._abortLoading();\n  }\n  /**\n   * Render\n   */\n\n\n  render() {\n    const props = this.props;\n    const icon = this.state.icon;\n\n    if (icon === null) {\n      // Render placeholder\n      return props.children ? props.children : React.createElement('span', {});\n    } // Add classes\n\n\n    let newProps = props;\n\n    if (icon.classes) {\n      newProps = { ...props,\n        className: (typeof props.className === 'string' ? props.className + ' ' : '') + icon.classes.join(' ')\n      };\n    } // Render icon\n\n\n    return render(icon.data, newProps, props._inline, props._ref);\n  }\n\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\n\n\nconst Icon = React.forwardRef(function Icon(props, ref) {\n  const newProps = { ...props,\n    _ref: ref,\n    _inline: false\n  };\n  return React.createElement(IconComponent, newProps);\n});\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\n\nconst InlineIcon = React.forwardRef(function InlineIcon(props, ref) {\n  const newProps = { ...props,\n    _ref: ref,\n    _inline: true\n  };\n  return React.createElement(IconComponent, newProps);\n});\n/**\n * Internal API\n */\n\nconst _api = {\n  getAPIConfig,\n  setAPIModule,\n  sendAPIQuery,\n  setFetch,\n  getFetch,\n  listAPIProviders,\n  mergeParams\n};\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcon, loadIcons, replaceIDs, shareStorage };","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/Media-Downloader-main/Media-Downloader-main/Instagram Downloader V2/node_modules/@iconify/react/dist/iconify.mjs"],"names":["React","matchName","iconDefaults","Object","freeze","left","top","width","height","rotate","vFlip","hFlip","fullIcon","data","stringToIcon","value","validate","allowSimpleName","provider","colonSeparated","split","slice","length","shift","name2","pop","prefix","result","name","validateIcon","dashSeparated","join","icon","match","mergeIconData","alias","key","prop","getIconData$1","full","getIcon","iteration","icons","assign","aliases","item","result2","parent","chars","isVariation","parseIconSet","callback","options","names","not_found","Array","forEach","push","keys","iconData","parseAliases","optionalProperties","quicklyValidateIconSet","obj","body","storageVersion","storage$1","create","w","window","self","_iconifyStorage","version","storage","err","shareStorage","newStorage","missing","getStorage","providerStorage","addIconSet","storage2","t","Date","now","addIconToStorage","getIconFromStorage","listIcons","allIcons","providers","provider2","prefixes","prefix2","map","concat","simpleNames","allowSimpleNames","allow","getIconData","addIcon","addCollection","added","iconExists","defaults","inline","hAlign","vAlign","mergeCustomisations","defaults2","attr","unitsSplit","unitsTest","calculateSize","size","ratio","precision","Math","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","preserveAspectRatio","props","iconToSVG","customisations","box","transformations","rotation","toString","tempValue","floor","unshift","attributes","viewBox","buildIcon","regex","randomPrefix","random","counter","replaceIDs","ids","exec","id","newID","escapedID","replace","RegExp","setAPIModule","getAPIModule","createAPIConfig","source","resources","path","maxURL","timeout","index","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","listAPIProviders","mergeParams","base","params","hasParams","indexOf","paramToString","encodeURIComponent","Error","maxLengthCache","pathCache","detectFetch","fetch","fetchModule","setFetch","fetch2","getFetch","calculateMaxLength","maxHostLength","host","max","url","cacheKey","shouldAbort","status","prepare","results","maxLength","type","getPath","send","iconsList","uri","defaultError","then","response","setTimeout","json","catch","fetchAPIModule","sortIcons","loaded","pending","sort","a","b","localeCompare","lastIcon","localStorage","list","callbacks","pendingUpdates","removeCallback","sources","providerCallbacks","items","filter","row","updateCallbacks","providerPendingUpdates","hasPending","oldLength","abort","idCounter","storeCallback","pendingSources","bind","listToIcons","defaultConfig","sendQuery","payload","query","done","resourcesCount","startIndex","nextIndex","startTime","queriesSent","lastError","timer","queue","doneCallbacks","resetTimer","clearTimeout","subscribe","overwrite","getQueryStatus","queriesPending","failQuery","clearQueue","moduleResponse","isError","queued","execNext","resource","status2","setConfig","newConfig","initRedundancy","cfg","queries","cleanup","queryCallback","doneCallback","query2","error","find","instance","setIndex","getIndex","emptyCallback$1","redundancyCache","getRedundancyCache","redundancy","cachedReundancy","sendAPIQuery","target","api","cached","moduleKey","cache","emptyCallback","pendingIcons","iconsToLoad","loaderFlags","queueFlags","loadedNewIcons","providerLoaderFlags","errorsCache","loadNewIcons","time","console","providerIconsToLoad","providerQueueFlags","providerPendingIcons","icons2","parsed","store","err2","loadIcons","cleanedIcons","sortedIcons","callCallback","newIcons","lastProvider","lastPrefix","providerNewIcons","pendingQueue","loadIcon","Promise","fulfill","reject","iconObj","cacheVersion","cachePrefix","countKey","versionKey","hour","cacheExpiration","local","session","count","emptyList","_window","getGlobal","setCount","setItem","getCount","count2","getItem","total","parseInt","initCache","destroyCache","i","removeItem","loadCache","minTime","load","func","valid","JSON","parse","storeCache","stringify","toggleBrowserCache","separator","flipFromString","custom","flip","str","trim","alignmentFromString","align","rotateFromString","defaultValue","units","value2","svgDefaults","inlineDefaults","render","ref","defaultProps","style","componentProps","color","localCounter","dangerouslySetInnerHTML","__html","verticalAlign","createElement","enableCache","disableCache","document","IconifyPreload","preload","e","IconifyProviders","IconComponent","Component","constructor","state","_abortLoading","_loading","_setData","setState","_checkIcon","changed","_icon","iconName","classes","onLoad","componentDidMount","componentDidUpdate","oldProps","componentWillUnmount","children","newProps","className","_inline","_ref","Icon","forwardRef","InlineIcon","_api"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst matchName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst iconDefaults = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nfunction fullIcon(data) {\n  return { ...iconDefaults, ...data };\n}\n\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIcon(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIcon = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchName)) && icon.name.match(matchName));\n};\n\nfunction mergeIconData(icon, alias) {\n  const result = { ...icon };\n  for (const key in iconDefaults) {\n    const prop = key;\n    if (alias[prop] !== void 0) {\n      const value = alias[prop];\n      if (result[prop] === void 0) {\n        result[prop] = value;\n        continue;\n      }\n      switch (prop) {\n        case \"rotate\":\n          result[prop] = (result[prop] + value) % 4;\n          break;\n        case \"hFlip\":\n        case \"vFlip\":\n          result[prop] = value !== result[prop];\n          break;\n        default:\n          result[prop] = value;\n      }\n    }\n  }\n  return result;\n}\n\nfunction getIconData$1(data, name, full = false) {\n  function getIcon(name2, iteration) {\n    if (data.icons[name2] !== void 0) {\n      return Object.assign({}, data.icons[name2]);\n    }\n    if (iteration > 5) {\n      return null;\n    }\n    const aliases = data.aliases;\n    if (aliases && aliases[name2] !== void 0) {\n      const item = aliases[name2];\n      const result2 = getIcon(item.parent, iteration + 1);\n      if (result2) {\n        return mergeIconData(result2, item);\n      }\n      return result2;\n    }\n    const chars = data.chars;\n    if (!iteration && chars && chars[name2] !== void 0) {\n      return getIcon(chars[name2], iteration + 1);\n    }\n    return null;\n  }\n  const result = getIcon(name, 0);\n  if (result) {\n    for (const key in iconDefaults) {\n      if (result[key] === void 0 && data[key] !== void 0) {\n        result[key] = data[key];\n      }\n    }\n  }\n  return result && full ? fullIcon(result) : result;\n}\n\nfunction isVariation(item) {\n  for (const key in iconDefaults) {\n    if (item[key] !== void 0) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction parseIconSet(data, callback, options) {\n  options = options || {};\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const icons = data.icons;\n  Object.keys(icons).forEach((name) => {\n    const iconData = getIconData$1(data, name, true);\n    if (iconData) {\n      callback(name, iconData);\n      names.push(name);\n    }\n  });\n  const parseAliases = options.aliases || \"all\";\n  if (parseAliases !== \"none\" && typeof data.aliases === \"object\") {\n    const aliases = data.aliases;\n    Object.keys(aliases).forEach((name) => {\n      if (parseAliases === \"variations\" && isVariation(aliases[name])) {\n        return;\n      }\n      const iconData = getIconData$1(data, name, true);\n      if (iconData) {\n        callback(name, iconData);\n        names.push(name);\n      }\n    });\n  }\n  return names;\n}\n\nconst optionalProperties = {\n  provider: \"string\",\n  aliases: \"object\",\n  not_found: \"object\"\n};\nfor (const prop in iconDefaults) {\n  optionalProperties[prop] = typeof iconDefaults[prop];\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  for (const prop in optionalProperties) {\n    if (obj[prop] !== void 0 && typeof obj[prop] !== optionalProperties[prop]) {\n      return null;\n    }\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchName) || typeof icon.body !== \"string\") {\n      return null;\n    }\n    for (const prop in iconDefaults) {\n      if (icon[prop] !== void 0 && typeof icon[prop] !== typeof iconDefaults[prop]) {\n        return null;\n      }\n    }\n  }\n  const aliases = data.aliases;\n  if (aliases) {\n    for (const name in aliases) {\n      const icon = aliases[name];\n      const parent = icon.parent;\n      if (!name.match(matchName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent]) {\n        return null;\n      }\n      for (const prop in iconDefaults) {\n        if (icon[prop] !== void 0 && typeof icon[prop] !== typeof iconDefaults[prop]) {\n          return null;\n        }\n      }\n    }\n  }\n  return data;\n}\n\nconst storageVersion = 1;\nlet storage$1 = /* @__PURE__ */ Object.create(null);\ntry {\n  const w = window || self;\n  if (w && w._iconifyStorage.version === storageVersion) {\n    storage$1 = w._iconifyStorage.storage;\n  }\n} catch (err) {\n}\nfunction shareStorage() {\n  try {\n    const w = window || self;\n    if (w && !w._iconifyStorage) {\n      w._iconifyStorage = {\n        version: storageVersion,\n        storage: storage$1\n      };\n    }\n  } catch (err) {\n  }\n}\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ Object.create(null)\n  };\n}\nfunction getStorage(provider, prefix) {\n  if (storage$1[provider] === void 0) {\n    storage$1[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerStorage = storage$1[provider];\n  if (providerStorage[prefix] === void 0) {\n    providerStorage[prefix] = newStorage(provider, prefix);\n  }\n  return providerStorage[prefix];\n}\nfunction addIconSet(storage2, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  const t = Date.now();\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage2.icons[name] = icon;\n    } else {\n      storage2.missing[name] = t;\n    }\n  });\n}\nfunction addIconToStorage(storage2, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage2.icons[name] = Object.freeze(fullIcon(icon));\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction getIconFromStorage(storage2, name) {\n  const value = storage2.icons[name];\n  return value === void 0 ? null : value;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  let providers;\n  if (typeof provider === \"string\") {\n    providers = [provider];\n  } else {\n    providers = Object.keys(storage$1);\n  }\n  providers.forEach((provider2) => {\n    let prefixes;\n    if (typeof provider2 === \"string\" && typeof prefix === \"string\") {\n      prefixes = [prefix];\n    } else {\n      prefixes = storage$1[provider2] === void 0 ? [] : Object.keys(storage$1[provider2]);\n    }\n    prefixes.forEach((prefix2) => {\n      const storage2 = getStorage(provider2, prefix2);\n      const icons = Object.keys(storage2.icons).map((name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name);\n      allIcons = allIcons.concat(icons);\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  return icon ? getIconFromStorage(getStorage(icon.provider, icon.prefix), icon.name) : null;\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = typeof data.provider === \"string\" ? data.provider : \"\";\n  }\n  if (simpleNames && provider === \"\" && (typeof data.prefix !== \"string\" || data.prefix === \"\")) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  if (typeof data.prefix !== \"string\" || !validateIcon({\n    provider,\n    prefix: data.prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, data.prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists(name) {\n  return getIconData(name) !== null;\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? { ...result } : null;\n}\n\nconst defaults = Object.freeze({\n  inline: false,\n  width: null,\n  height: null,\n  hAlign: \"center\",\n  vAlign: \"middle\",\n  slice: false,\n  hFlip: false,\n  vFlip: false,\n  rotate: 0\n});\nfunction mergeCustomisations(defaults2, item) {\n  const result = {};\n  for (const key in defaults2) {\n    const attr = key;\n    result[attr] = defaults2[attr];\n    if (item[attr] === void 0) {\n      continue;\n    }\n    const value = item[attr];\n    switch (attr) {\n      case \"inline\":\n      case \"slice\":\n        if (typeof value === \"boolean\") {\n          result[attr] = value;\n        }\n        break;\n      case \"hFlip\":\n      case \"vFlip\":\n        if (value === true) {\n          result[attr] = !result[attr];\n        }\n        break;\n      case \"hAlign\":\n      case \"vAlign\":\n        if (typeof value === \"string\" && value !== \"\") {\n          result[attr] = value;\n        }\n        break;\n      case \"width\":\n      case \"height\":\n        if (typeof value === \"string\" && value !== \"\" || typeof value === \"number\" && value || value === null) {\n          result[attr] = value;\n        }\n        break;\n      case \"rotate\":\n        if (typeof value === \"number\") {\n          result[attr] += value;\n        }\n        break;\n    }\n  }\n  return result;\n}\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision === void 0 ? 100 : precision;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nfunction preserveAspectRatio(props) {\n  let result = \"\";\n  switch (props.hAlign) {\n    case \"left\":\n      result += \"xMin\";\n      break;\n    case \"right\":\n      result += \"xMax\";\n      break;\n    default:\n      result += \"xMid\";\n  }\n  switch (props.vAlign) {\n    case \"top\":\n      result += \"YMin\";\n      break;\n    case \"bottom\":\n      result += \"YMax\";\n      break;\n    default:\n      result += \"YMid\";\n  }\n  result += props.slice ? \" slice\" : \" meet\";\n  return result;\n}\nfunction iconToSVG(icon, customisations) {\n  const box = {\n    left: icon.left,\n    top: icon.top,\n    width: icon.width,\n    height: icon.height\n  };\n  let body = icon.body;\n  [icon, customisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\");\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== 0 || box.top !== 0) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  let width, height;\n  if (customisations.width === null && customisations.height === null) {\n    height = \"1em\";\n    width = calculateSize(height, box.width / box.height);\n  } else if (customisations.width !== null && customisations.height !== null) {\n    width = customisations.width;\n    height = customisations.height;\n  } else if (customisations.height !== null) {\n    height = customisations.height;\n    width = calculateSize(height, box.width / box.height);\n  } else {\n    width = customisations.width;\n    height = calculateSize(width, box.height / box.width);\n  }\n  if (width === \"auto\") {\n    width = box.width;\n  }\n  if (height === \"auto\") {\n    height = box.height;\n  }\n  width = typeof width === \"string\" ? width : width.toString() + \"\";\n  height = typeof height === \"string\" ? height : height.toString() + \"\";\n  const result = {\n    attributes: {\n      width,\n      height,\n      preserveAspectRatio: preserveAspectRatio(customisations),\n      viewBox: box.left.toString() + \" \" + box.top.toString() + \" \" + box.width.toString() + \" \" + box.height.toString()\n    },\n    body\n  };\n  if (customisations.inline) {\n    result.inline = true;\n  }\n  return result;\n}\n\nfunction buildIcon(icon, customisations) {\n  return iconToSVG(fullIcon(icon), customisations ? mergeCustomisations(defaults, customisations) : defaults);\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"), \"$1\" + newID + \"$3\");\n  });\n  return body;\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    resources,\n    path: source.path === void 0 ? \"/\" : source.path,\n    maxURL: source.maxURL ? source.maxURL : 500,\n    rotate: source.rotate ? source.rotate : 750,\n    timeout: source.timeout ? source.timeout : 5e3,\n    random: source.random === true,\n    index: source.index ? source.index : 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst mergeParams = (base, params) => {\n  let result = base, hasParams = result.indexOf(\"?\") !== -1;\n  function paramToString(value) {\n    switch (typeof value) {\n      case \"boolean\":\n        return value ? \"true\" : \"false\";\n      case \"number\":\n        return encodeURIComponent(value);\n      case \"string\":\n        return encodeURIComponent(value);\n      default:\n        throw new Error(\"Invalid parameter\");\n    }\n  }\n  Object.keys(params).forEach((key) => {\n    let value;\n    try {\n      value = paramToString(params[key]);\n    } catch (err) {\n      return;\n    }\n    result += (hasParams ? \"&\" : \"?\") + encodeURIComponent(key) + \"=\" + value;\n    hasParams = true;\n  });\n  return result;\n};\n\nconst maxLengthCache = {};\nconst pathCache = {};\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n  return null;\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = mergeParams(prefix + \".json\", {\n      icons: \"\"\n    });\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  const cacheKey = provider + \":\" + prefix;\n  pathCache[provider] = config.path;\n  maxLengthCache[cacheKey] = result;\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  let maxLength = maxLengthCache[prefix];\n  if (maxLength === void 0) {\n    maxLength = calculateMaxLength(provider, prefix);\n  }\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    if (pathCache[provider] === void 0) {\n      const config = getAPIConfig(provider);\n      if (!config) {\n        return \"/\";\n      }\n      pathCache[provider] = config.path;\n    }\n    return pathCache[provider];\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      path += mergeParams(prefix + \".json\", {\n        icons: iconsList\n      });\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        callback(\"next\", defaultError);\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    if (storage[provider] === void 0) {\n      storage[provider] = /* @__PURE__ */ Object.create(null);\n    }\n    const providerStorage = storage[provider];\n    if (providerStorage[prefix] === void 0) {\n      providerStorage[prefix] = getStorage(provider, prefix);\n    }\n    const localStorage = providerStorage[prefix];\n    let list;\n    if (localStorage.icons[name] !== void 0) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing[name] !== void 0) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nconst callbacks = /* @__PURE__ */ Object.create(null);\nconst pendingUpdates = /* @__PURE__ */ Object.create(null);\nfunction removeCallback(sources, id) {\n  sources.forEach((source) => {\n    const provider = source.provider;\n    if (callbacks[provider] === void 0) {\n      return;\n    }\n    const providerCallbacks = callbacks[provider];\n    const prefix = source.prefix;\n    const items = providerCallbacks[prefix];\n    if (items) {\n      providerCallbacks[prefix] = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(provider, prefix) {\n  if (pendingUpdates[provider] === void 0) {\n    pendingUpdates[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerPendingUpdates = pendingUpdates[provider];\n  if (!providerPendingUpdates[prefix]) {\n    providerPendingUpdates[prefix] = true;\n    setTimeout(() => {\n      providerPendingUpdates[prefix] = false;\n      if (callbacks[provider] === void 0 || callbacks[provider][prefix] === void 0) {\n        return;\n      }\n      const items = callbacks[provider][prefix].slice(0);\n      if (!items.length) {\n        return;\n      }\n      const storage = getStorage(provider, prefix);\n      let hasPending = false;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name] !== void 0) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing[name] !== void 0) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([\n              {\n                provider,\n                prefix\n              }\n            ], item.id);\n          }\n          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((source) => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n    if (callbacks[provider] === void 0) {\n      callbacks[provider] = /* @__PURE__ */ Object.create(null);\n    }\n    const providerCallbacks = callbacks[provider];\n    if (providerCallbacks[prefix] === void 0) {\n      providerCallbacks[prefix] = [];\n    }\n    providerCallbacks[prefix].push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, false, simpleNames) : item;\n    if (!validate || validateIcon(icon, simpleNames)) {\n      result.push({\n        provider: icon.provider,\n        prefix: icon.prefix,\n        name: icon.name\n      });\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction setConfig(config) {\n  if (typeof config !== \"object\" || typeof config.resources !== \"object\" || !(config.resources instanceof Array) || !config.resources.length) {\n    throw new Error(\"Invalid Reduncancy configuration\");\n  }\n  const newConfig = /* @__PURE__ */ Object.create(null);\n  let key;\n  for (key in defaultConfig) {\n    if (config[key] !== void 0) {\n      newConfig[key] = config[key];\n    } else {\n      newConfig[key] = defaultConfig[key];\n    }\n  }\n  return newConfig;\n}\nfunction initRedundancy(cfg) {\n  const config = setConfig(cfg);\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(config, payload, queryCallback, (data, error) => {\n      cleanup();\n      if (doneCallback) {\n        doneCallback(data, error);\n      }\n    });\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    const result = queries.find((value) => {\n      return callback(value);\n    });\n    return result !== void 0 ? result : null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (redundancyCache[provider] === void 0) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst cache = {};\n\nfunction emptyCallback() {\n}\nconst pendingIcons = /* @__PURE__ */ Object.create(null);\nconst iconsToLoad = /* @__PURE__ */ Object.create(null);\nconst loaderFlags = /* @__PURE__ */ Object.create(null);\nconst queueFlags = /* @__PURE__ */ Object.create(null);\nfunction loadedNewIcons(provider, prefix) {\n  if (loaderFlags[provider] === void 0) {\n    loaderFlags[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerLoaderFlags = loaderFlags[provider];\n  if (!providerLoaderFlags[prefix]) {\n    providerLoaderFlags[prefix] = true;\n    setTimeout(() => {\n      providerLoaderFlags[prefix] = false;\n      updateCallbacks(provider, prefix);\n    });\n  }\n}\nconst errorsCache = /* @__PURE__ */ Object.create(null);\nfunction loadNewIcons(provider, prefix, icons) {\n  function err() {\n    const key = (provider === \"\" ? \"\" : \"@\" + provider + \":\") + prefix;\n    const time = Math.floor(Date.now() / 6e4);\n    if (errorsCache[key] < time) {\n      errorsCache[key] = time;\n      console.error('Unable to retrieve icons for \"' + key + '\" because API is not configured properly.');\n    }\n  }\n  if (iconsToLoad[provider] === void 0) {\n    iconsToLoad[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerIconsToLoad = iconsToLoad[provider];\n  if (queueFlags[provider] === void 0) {\n    queueFlags[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerQueueFlags = queueFlags[provider];\n  if (pendingIcons[provider] === void 0) {\n    pendingIcons[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerPendingIcons = pendingIcons[provider];\n  if (providerIconsToLoad[prefix] === void 0) {\n    providerIconsToLoad[prefix] = icons;\n  } else {\n    providerIconsToLoad[prefix] = providerIconsToLoad[prefix].concat(icons).sort();\n  }\n  if (!providerQueueFlags[prefix]) {\n    providerQueueFlags[prefix] = true;\n    setTimeout(() => {\n      providerQueueFlags[prefix] = false;\n      const icons2 = providerIconsToLoad[prefix];\n      delete providerIconsToLoad[prefix];\n      const api = getAPIModule(provider);\n      if (!api) {\n        err();\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data, error) => {\n          const storage = getStorage(provider, prefix);\n          if (typeof data !== \"object\") {\n            if (error !== 404) {\n              return;\n            }\n            const t = Date.now();\n            item.icons.forEach((name) => {\n              storage.missing[name] = t;\n            });\n          } else {\n            try {\n              const parsed = addIconSet(storage, data);\n              if (!parsed.length) {\n                return;\n              }\n              const pending = providerPendingIcons[prefix];\n              parsed.forEach((name) => {\n                delete pending[name];\n              });\n              if (cache.store) {\n                cache.store(provider, data);\n              }\n            } catch (err2) {\n              console.error(err2);\n            }\n          }\n          loadedNewIcons(provider, prefix);\n        });\n      });\n    });\n  }\n}\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push({\n      provider,\n      prefix\n    });\n    if (pendingIcons[provider] === void 0) {\n      pendingIcons[provider] = /* @__PURE__ */ Object.create(null);\n    }\n    const providerPendingIcons = pendingIcons[provider];\n    if (providerPendingIcons[prefix] === void 0) {\n      providerPendingIcons[prefix] = /* @__PURE__ */ Object.create(null);\n    }\n    if (newIcons[provider] === void 0) {\n      newIcons[provider] = /* @__PURE__ */ Object.create(null);\n    }\n    const providerNewIcons = newIcons[provider];\n    if (providerNewIcons[prefix] === void 0) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  const time = Date.now();\n  sortedIcons.pending.forEach((icon) => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const pendingQueue = pendingIcons[provider][prefix];\n    if (pendingQueue[name] === void 0) {\n      pendingQueue[name] = time;\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((source) => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(provider, prefix, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon) : icon;\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const storage = getStorage(iconObj.provider, iconObj.prefix);\n        const data = getIconFromStorage(storage, iconObj.name);\n        if (data) {\n          fulfill(data);\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\nconst cacheVersion = \"iconify2\";\nconst cachePrefix = \"iconify\";\nconst countKey = cachePrefix + \"-count\";\nconst versionKey = cachePrefix + \"-version\";\nconst hour = 36e5;\nconst cacheExpiration = 168;\nconst config = {\n  local: true,\n  session: true\n};\nlet loaded = false;\nconst count = {\n  local: 0,\n  session: 0\n};\nconst emptyList = {\n  local: [],\n  session: []\n};\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getGlobal(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  config[key] = false;\n  return null;\n}\nfunction setCount(storage, key, value) {\n  try {\n    storage.setItem(countKey, value.toString());\n    count[key] = value;\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nfunction getCount(storage) {\n  const count2 = storage.getItem(countKey);\n  if (count2) {\n    const total = parseInt(count2);\n    return total ? total : 0;\n  }\n  return 0;\n}\nfunction initCache(storage, key) {\n  try {\n    storage.setItem(versionKey, cacheVersion);\n  } catch (err) {\n  }\n  setCount(storage, key, 0);\n}\nfunction destroyCache(storage) {\n  try {\n    const total = getCount(storage);\n    for (let i = 0; i < total; i++) {\n      storage.removeItem(cachePrefix + i.toString());\n    }\n  } catch (err) {\n  }\n}\nconst loadCache = () => {\n  if (loaded) {\n    return;\n  }\n  loaded = true;\n  const minTime = Math.floor(Date.now() / hour) - cacheExpiration;\n  function load(key) {\n    const func = getGlobal(key);\n    if (!func) {\n      return;\n    }\n    const getItem = (index) => {\n      const name = cachePrefix + index.toString();\n      const item = func.getItem(name);\n      if (typeof item !== \"string\") {\n        return false;\n      }\n      let valid = true;\n      try {\n        const data = JSON.parse(item);\n        if (typeof data !== \"object\" || typeof data.cached !== \"number\" || data.cached < minTime || typeof data.provider !== \"string\" || typeof data.data !== \"object\" || typeof data.data.prefix !== \"string\") {\n          valid = false;\n        } else {\n          const provider = data.provider;\n          const prefix = data.data.prefix;\n          const storage = getStorage(provider, prefix);\n          valid = addIconSet(storage, data.data).length > 0;\n        }\n      } catch (err) {\n        valid = false;\n      }\n      if (!valid) {\n        func.removeItem(name);\n      }\n      return valid;\n    };\n    try {\n      const version = func.getItem(versionKey);\n      if (version !== cacheVersion) {\n        if (version) {\n          destroyCache(func);\n        }\n        initCache(func, key);\n        return;\n      }\n      let total = getCount(func);\n      for (let i = total - 1; i >= 0; i--) {\n        if (!getItem(i)) {\n          if (i === total - 1) {\n            total--;\n          } else {\n            emptyList[key].push(i);\n          }\n        }\n      }\n      setCount(func, key, total);\n    } catch (err) {\n    }\n  }\n  for (const key in config) {\n    load(key);\n  }\n};\nconst storeCache = (provider, data) => {\n  if (!loaded) {\n    loadCache();\n  }\n  function store(key) {\n    if (!config[key]) {\n      return false;\n    }\n    const func = getGlobal(key);\n    if (!func) {\n      return false;\n    }\n    let index = emptyList[key].shift();\n    if (index === void 0) {\n      index = count[key];\n      if (!setCount(func, key, index + 1)) {\n        return false;\n      }\n    }\n    try {\n      const item = {\n        cached: Math.floor(Date.now() / hour),\n        provider,\n        data\n      };\n      func.setItem(cachePrefix + index.toString(), JSON.stringify(item));\n    } catch (err) {\n      return false;\n    }\n    return true;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      config[storage] = value;\n      break;\n    case \"all\":\n      for (const key in config) {\n        config[key] = value;\n      }\n      break;\n  }\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\nfunction alignmentFromString(custom, align) {\n  align.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"left\":\n      case \"center\":\n      case \"right\":\n        custom.hAlign = value;\n        break;\n      case \"top\":\n      case \"middle\":\n      case \"bottom\":\n        custom.vAlign = value;\n        break;\n      case \"slice\":\n      case \"crop\":\n        custom.slice = true;\n        break;\n      case \"meet\":\n        custom.slice = false;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n    'style': {}, // Include style if it isn't set to add verticalAlign later\n};\n/**\n * Default values for customisations for inline icon\n */\nconst inlineDefaults = { ...defaults, inline: true };\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops, \n// True if icon should have vertical-align added\ninline, \n// Optional reference for SVG, extracted by React.forwardRef()\nref) => {\n    // Get default properties\n    const defaultProps = inline ? inlineDefaults : defaults;\n    // Get all customisations\n    const customisations = mergeCustomisations(defaultProps, props);\n    // Create style\n    const style = typeof props.style === 'object' && props.style !== null\n        ? props.style\n        : {};\n    // Create SVG component properties\n    const componentProps = { ...svgDefaults, ref, style };\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'children':\n            case 'onLoad':\n            case '_ref':\n            case '_inline':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Alignment as string\n            case 'align':\n                if (typeof value === 'string') {\n                    alignmentFromString(customisations, value);\n                }\n                break;\n            // Color: copy to style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            // Copy missing property if it does not exist in customisations\n            default:\n                if (defaultProps[key] === void 0) {\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    // Counter for ids based on \"id\" property to render icons consistently on server and client\n    let localCounter = 0;\n    let id = props.id;\n    if (typeof id === 'string') {\n        // Convert '-' to '_' to avoid errors in animations\n        id = id.replace(/-/g, '_');\n    }\n    // Add icon stuff\n    componentProps.dangerouslySetInnerHTML = {\n        __html: replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyReact'),\n    };\n    for (let key in item.attributes) {\n        componentProps[key] = item.attributes[key];\n    }\n    if (item.inline && style.verticalAlign === void 0) {\n        style.verticalAlign = '-0.125em';\n    }\n    return React.createElement('svg', componentProps);\n};\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    cache.store = storeCache;\n    loadCache();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\nclass IconComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // Render placeholder before component is mounted\n            icon: null,\n        };\n    }\n    /**\n     * Abort loading icon\n     */\n    _abortLoading() {\n        if (this._loading) {\n            this._loading.abort();\n            this._loading = null;\n        }\n    }\n    /**\n     * Update state\n     */\n    _setData(icon) {\n        if (this.state.icon !== icon) {\n            this.setState({\n                icon,\n            });\n        }\n    }\n    /**\n     * Check if icon should be loaded\n     */\n    _checkIcon(changed) {\n        const state = this.state;\n        const icon = this.props.icon;\n        // Icon is an object\n        if (typeof icon === 'object' &&\n            icon !== null &&\n            typeof icon.body === 'string') {\n            // Stop loading\n            this._icon = '';\n            this._abortLoading();\n            if (changed || state.icon === null) {\n                // Set data if it was changed\n                this._setData({\n                    data: fullIcon(icon),\n                });\n            }\n            return;\n        }\n        // Invalid icon?\n        let iconName;\n        if (typeof icon !== 'string' ||\n            (iconName = stringToIcon(icon, false, true)) === null) {\n            this._abortLoading();\n            this._setData(null);\n            return;\n        }\n        // Load icon\n        const data = getIconData(iconName);\n        if (data === null) {\n            // Icon needs to be loaded\n            if (!this._loading || this._loading.name !== icon) {\n                // New icon to load\n                this._abortLoading();\n                this._icon = '';\n                this._setData(null);\n                this._loading = {\n                    name: icon,\n                    abort: loadIcons([iconName], this._checkIcon.bind(this, false)),\n                };\n            }\n            return;\n        }\n        // Icon data is available\n        if (this._icon !== icon || state.icon === null) {\n            // New icon or icon has been loaded\n            this._abortLoading();\n            this._icon = icon;\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            // Set data\n            this._setData({\n                data,\n                classes,\n            });\n            if (this.props.onLoad) {\n                this.props.onLoad(icon);\n            }\n        }\n    }\n    /**\n     * Component mounted\n     */\n    componentDidMount() {\n        this._checkIcon(false);\n    }\n    /**\n     * Component updated\n     */\n    componentDidUpdate(oldProps) {\n        if (oldProps.icon !== this.props.icon) {\n            this._checkIcon(true);\n        }\n    }\n    /**\n     * Abort loading\n     */\n    componentWillUnmount() {\n        this._abortLoading();\n    }\n    /**\n     * Render\n     */\n    render() {\n        const props = this.props;\n        const icon = this.state.icon;\n        if (icon === null) {\n            // Render placeholder\n            return props.children\n                ? props.children\n                : React.createElement('span', {});\n        }\n        // Add classes\n        let newProps = props;\n        if (icon.classes) {\n            newProps = {\n                ...props,\n                className: (typeof props.className === 'string'\n                    ? props.className + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render(icon.data, newProps, props._inline, props._ref);\n    }\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\nconst Icon = React.forwardRef(function Icon(props, ref) {\n    const newProps = {\n        ...props,\n        _ref: ref,\n        _inline: false,\n    };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\nconst InlineIcon = React.forwardRef(function InlineIcon(props, ref) {\n    const newProps = { ...props, _ref: ref, _inline: true };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders,\n    mergeParams,\n};\n\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcon, loadIcons, replaceIDs, shareStorage };\n"]},"metadata":{},"sourceType":"module"}